// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`stateless 1`] = `
"'use strict';

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports.default = Foo;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var React = require('react');

function Foo(props) {
  React.createElement('div', null);
}
Foo.propTypes = {
  an_optional_string: _propTypes2.default.string,
  an_optional_string_1: _propTypes2.default.string,
  an_optional_union: _propTypes2.default.oneOf([1, 10, 'foo']),
  an_optional_union_1: _propTypes2.default.oneOf([1, 10, 'foo']),
  an_optional_union_2: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  a_number: _propTypes2.default.number.isRequired,
  a_boolean: _propTypes2.default.bool.isRequired,
  a_generic_object: _propTypes2.default.object.isRequired,
  array_of_strings: _propTypes2.default.arrayOf(_propTypes2.default.string.isRequired).isRequired,
  instance_of_Bar: function instance_of_Bar() {
    return (typeof Bar === 'function' ? _propTypes2.default.instanceOf(Bar).isRequired : _propTypes2.default.any.isRequired).apply(this, arguments);
  },
  anything: function anything(props, propName, componentName) {
    if (!Object.prototype.hasOwnProperty.call(props, propName)) {
      throw new Error('Prop \`' + propName + '\` has type \\\\'any\\\\' or \\\\'mixed\\\\', but was not provided to \`' + componentName + '\`. Pass undefined or any other value.');
    }
  },
  one_of: _propTypes2.default.oneOf(['QUACK', 'BARK', 5]).isRequired,
  onw_of_type: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]).isRequired,
  nested_object_level_1: _propTypes2.default.shape({
    string_property_1: _propTypes2.default.string.isRequired,
    nested_object_level_2: _propTypes2.default.shape({
      nested_object_level_3: _propTypes2.default.shape({
        string_property_3: _propTypes2.default.string.isRequired
      }).isRequired,
      string_property_2: _propTypes2.default.string.isRequired
    }).isRequired
  }).isRequired,
  should_error_if_provided: function should_error_if_provided(props, propName, componentName) {
    if (props[propName] != null) {
      throw new Error('Invalid prop \`' + propName + '\` of value \`' + props[propName] + '\` passed to \`' + componentName + '\`. Expected undefined or null.');
    }
  }
};"
`;
